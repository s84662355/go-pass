// Code generated by protoc-gen-go. DO NOT EDIT.
// source: convention/protobuf/GoPass通讯协议请求体.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LockType int32

const (
	LockType_UPDATE LockType = 0
	LockType_SHARE  LockType = 1
)

var LockType_name = map[int32]string{
	0: "UPDATE",
	1: "SHARE",
}

var LockType_value = map[string]int32{
	"UPDATE": 0,
	"SHARE":  1,
}

func (x LockType) String() string {
	return proto.EnumName(LockType_name, int32(x))
}

func (LockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_635b12b7812ec00d, []int{0}
}

type GoPassRequestBody struct {
	LockName             string   `protobuf:"bytes,1,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	LockType             LockType `protobuf:"varint,2,opt,name=lock_type,json=lockType,proto3,enum=protocol.LockType" json:"lock_type,omitempty"`
	LockTime             uint32   `protobuf:"varint,3,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	WaitTime             uint32   `protobuf:"varint,4,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoPassRequestBody) Reset()         { *m = GoPassRequestBody{} }
func (m *GoPassRequestBody) String() string { return proto.CompactTextString(m) }
func (*GoPassRequestBody) ProtoMessage()    {}
func (*GoPassRequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_635b12b7812ec00d, []int{0}
}

func (m *GoPassRequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoPassRequestBody.Unmarshal(m, b)
}
func (m *GoPassRequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoPassRequestBody.Marshal(b, m, deterministic)
}
func (m *GoPassRequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoPassRequestBody.Merge(m, src)
}
func (m *GoPassRequestBody) XXX_Size() int {
	return xxx_messageInfo_GoPassRequestBody.Size(m)
}
func (m *GoPassRequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_GoPassRequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_GoPassRequestBody proto.InternalMessageInfo

func (m *GoPassRequestBody) GetLockName() string {
	if m != nil {
		return m.LockName
	}
	return ""
}

func (m *GoPassRequestBody) GetLockType() LockType {
	if m != nil {
		return m.LockType
	}
	return LockType_UPDATE
}

func (m *GoPassRequestBody) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *GoPassRequestBody) GetWaitTime() uint32 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.LockType", LockType_name, LockType_value)
	proto.RegisterType((*GoPassRequestBody)(nil), "protocol.GoPassRequestBody")
}

func init() {
	proto.RegisterFile("convention/protobuf/GoPass通讯协议请求体.proto", fileDescriptor_635b12b7812ec00d)
}

var fileDescriptor_635b12b7812ec00d = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4d, 0xce, 0xcf, 0x2b,
	0x4b, 0xcd, 0x2b, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3,
	0x77, 0xcf, 0xf7, 0xc9, 0x4f, 0xce, 0x7e, 0xd9, 0x30, 0xeb, 0xc5, 0xba, 0xf5, 0x4f, 0x7b, 0xfb,
	0x5f, 0xac, 0x5b, 0xf7, 0x62, 0xfd, 0xf6, 0x67, 0x1b, 0x9b, 0x9e, 0xec, 0x9d, 0xac, 0x07, 0x56,
	0x24, 0xc4, 0x01, 0xa6, 0x92, 0xf3, 0x73, 0x94, 0x66, 0x33, 0x72, 0x09, 0x42, 0xd4, 0x07, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x38, 0xe5, 0xa7, 0x54, 0x0a, 0x49, 0x73, 0x71, 0xe6, 0xe4, 0x27,
	0x67, 0xc7, 0xe7, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0x80, 0x04,
	0xfc, 0x12, 0x73, 0x53, 0x85, 0xf4, 0xa1, 0x92, 0x25, 0x95, 0x05, 0xa9, 0x12, 0x4c, 0x0a, 0x8c,
	0x1a, 0x7c, 0x46, 0x42, 0x7a, 0x30, 0x03, 0xf5, 0x40, 0x46, 0x85, 0x54, 0x16, 0xa4, 0x42, 0x34,
	0x80, 0x58, 0x70, 0xd3, 0x4a, 0x32, 0x73, 0x53, 0x25, 0x98, 0x15, 0x18, 0x35, 0x78, 0xa1, 0x92,
	0x99, 0xb9, 0x60, 0xc9, 0xf2, 0xc4, 0xcc, 0x12, 0x88, 0x24, 0x0b, 0x44, 0x12, 0x24, 0x00, 0x92,
	0xd4, 0x52, 0xe4, 0xe2, 0x80, 0x99, 0x27, 0xc4, 0xc5, 0xc5, 0x16, 0x1a, 0xe0, 0xe2, 0x18, 0xe2,
	0x2a, 0xc0, 0x20, 0xc4, 0xc9, 0xc5, 0x1a, 0xec, 0xe1, 0x18, 0xe4, 0x2a, 0xc0, 0x98, 0xc4, 0x06,
	0xb6, 0xd9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x16, 0x4f, 0x34, 0x2e, 0x0a, 0x01, 0x00, 0x00,
}
