// Code generated by protoc-gen-go. DO NOT EDIT.
// source: convention/protobuf/TcpResponsethead响应头结构体.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpResponseHead struct {
	Host                 string        `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Date                 string        `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Type                 ResponseEvent `protobuf:"varint,3,opt,name=type,proto3,enum=protocol.ResponseEvent" json:"type,omitempty"`
	BodyBytes            []byte        `protobuf:"bytes,4,opt,name=bodyBytes,proto3" json:"bodyBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TcpResponseHead) Reset()         { *m = TcpResponseHead{} }
func (m *TcpResponseHead) String() string { return proto.CompactTextString(m) }
func (*TcpResponseHead) ProtoMessage()    {}
func (*TcpResponseHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_604cb7d7c4d3ed13, []int{0}
}

func (m *TcpResponseHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpResponseHead.Unmarshal(m, b)
}
func (m *TcpResponseHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpResponseHead.Marshal(b, m, deterministic)
}
func (m *TcpResponseHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpResponseHead.Merge(m, src)
}
func (m *TcpResponseHead) XXX_Size() int {
	return xxx_messageInfo_TcpResponseHead.Size(m)
}
func (m *TcpResponseHead) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpResponseHead.DiscardUnknown(m)
}

var xxx_messageInfo_TcpResponseHead proto.InternalMessageInfo

func (m *TcpResponseHead) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TcpResponseHead) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *TcpResponseHead) GetType() ResponseEvent {
	if m != nil {
		return m.Type
	}
	return ResponseEvent_LEFT11
}

func (m *TcpResponseHead) GetBodyBytes() []byte {
	if m != nil {
		return m.BodyBytes
	}
	return nil
}

func init() {
	proto.RegisterType((*TcpResponseHead)(nil), "protocol.TcpResponseHead")
}

func init() {
	proto.RegisterFile("convention/protobuf/TcpResponsethead响应头结构体.proto", fileDescriptor_604cb7d7c4d3ed13)
}

var fileDescriptor_604cb7d7c4d3ed13 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x49, 0xce, 0xcf, 0x2b,
	0x4b, 0xcd, 0x2b, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3,
	0x0f, 0x49, 0x2e, 0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x2d, 0xc9, 0x48, 0x4d, 0x4c,
	0x79, 0x3a, 0xb9, 0xf7, 0xe9, 0xae, 0x29, 0x4f, 0x97, 0x6c, 0x79, 0xbe, 0x7b, 0xf2, 0xb3, 0x79,
	0x2d, 0x4f, 0xf6, 0x4e, 0xd6, 0x03, 0xab, 0x15, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x52, 0x84,
	0xcc, 0x71, 0x05, 0x49, 0x42, 0xcc, 0x79, 0xb2, 0xab, 0xfb, 0xc9, 0xee, 0x6d, 0xcf, 0x37, 0xee,
	0x7e, 0x3a, 0xaf, 0x1b, 0x62, 0x8e, 0x52, 0x0b, 0x23, 0x17, 0x3f, 0x92, 0x62, 0x8f, 0xd4, 0xc4,
	0x14, 0x21, 0x21, 0x2e, 0x96, 0x8c, 0xfc, 0xe2, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x30, 0x1b, 0x24, 0x96, 0x92, 0x58, 0x92, 0x2a, 0xc1, 0x04, 0x11, 0x03, 0xb1, 0x85, 0xb4, 0xb9,
	0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x98, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0xc4, 0xf5, 0x60, 0x4e,
	0xd2, 0x43, 0xb1, 0x3a, 0x08, 0xac, 0x48, 0x48, 0x86, 0x8b, 0x33, 0x29, 0x3f, 0xa5, 0xd2, 0xa9,
	0xb2, 0x24, 0xb5, 0x58, 0x82, 0x45, 0x81, 0x51, 0x83, 0x27, 0x08, 0x21, 0x90, 0xc4, 0x06, 0xd6,
	0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x81, 0x45, 0x4a, 0xdb, 0x15, 0x01, 0x00, 0x00,
}
