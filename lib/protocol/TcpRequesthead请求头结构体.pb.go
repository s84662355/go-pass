// Code generated by protoc-gen-go. DO NOT EDIT.
// source: convention/protobuf/TcpRequesthead请求头结构体.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpRequestHead struct {
	MachineCode          string       `protobuf:"bytes,1,opt,name=machineCode,proto3" json:"machineCode,omitempty"`
	SessionId            string       `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Date                 string       `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Type                 RequestEvent `protobuf:"varint,4,opt,name=type,proto3,enum=protocol.RequestEvent" json:"type,omitempty"`
	BodyBytes            []byte       `protobuf:"bytes,5,opt,name=bodyBytes,proto3" json:"bodyBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TcpRequestHead) Reset()         { *m = TcpRequestHead{} }
func (m *TcpRequestHead) String() string { return proto.CompactTextString(m) }
func (*TcpRequestHead) ProtoMessage()    {}
func (*TcpRequestHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_89afeb49f6bb4d33, []int{0}
}

func (m *TcpRequestHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpRequestHead.Unmarshal(m, b)
}
func (m *TcpRequestHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpRequestHead.Marshal(b, m, deterministic)
}
func (m *TcpRequestHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpRequestHead.Merge(m, src)
}
func (m *TcpRequestHead) XXX_Size() int {
	return xxx_messageInfo_TcpRequestHead.Size(m)
}
func (m *TcpRequestHead) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpRequestHead.DiscardUnknown(m)
}

var xxx_messageInfo_TcpRequestHead proto.InternalMessageInfo

func (m *TcpRequestHead) GetMachineCode() string {
	if m != nil {
		return m.MachineCode
	}
	return ""
}

func (m *TcpRequestHead) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *TcpRequestHead) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *TcpRequestHead) GetType() RequestEvent {
	if m != nil {
		return m.Type
	}
	return RequestEvent_LEFT
}

func (m *TcpRequestHead) GetBodyBytes() []byte {
	if m != nil {
		return m.BodyBytes
	}
	return nil
}

func init() {
	proto.RegisterType((*TcpRequestHead)(nil), "protocol.TcpRequestHead")
}

func init() {
	proto.RegisterFile("convention/protobuf/TcpRequesthead请求头结构体.proto", fileDescriptor_89afeb49f6bb4d33)
}

var fileDescriptor_89afeb49f6bb4d33 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4a, 0xce, 0xcf, 0x2b,
	0x4b, 0xcd, 0x2b, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3,
	0x0f, 0x49, 0x2e, 0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0xc9, 0x48, 0x4d, 0x4c, 0x79, 0xb1,
	0x7e, 0xfb, 0xb3, 0x8d, 0x4d, 0x4f, 0x97, 0x6c, 0x79, 0xbe, 0x7b, 0xf2, 0xb3, 0x79, 0x2d, 0x4f,
	0xf6, 0x4e, 0xd6, 0x03, 0xab, 0x14, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x52, 0xd6, 0xf8, 0x4d,
	0x71, 0x05, 0xc9, 0x41, 0x8c, 0x79, 0xb2, 0xab, 0xfb, 0xc9, 0xee, 0x6d, 0xcf, 0x37, 0xee, 0x7e,
	0x3a, 0xaf, 0x1b, 0x62, 0x8c, 0xd2, 0x3a, 0x46, 0x2e, 0x3e, 0x84, 0x5a, 0x8f, 0xd4, 0xc4, 0x14,
	0x21, 0x05, 0x2e, 0xee, 0xdc, 0xc4, 0xe4, 0x8c, 0xcc, 0xbc, 0x54, 0xe7, 0xfc, 0x94, 0x54, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x64, 0x21, 0x21, 0x19, 0x2e, 0xce, 0xe2, 0xd4, 0xe2, 0xe2,
	0xcc, 0xfc, 0x3c, 0xcf, 0x14, 0x09, 0x26, 0xb0, 0x3c, 0x42, 0x40, 0x48, 0x88, 0x8b, 0x25, 0x25,
	0xb1, 0x24, 0x55, 0x82, 0x19, 0x2c, 0x01, 0x66, 0x0b, 0x69, 0x71, 0xb1, 0x94, 0x54, 0x16, 0xa4,
	0x4a, 0xb0, 0x28, 0x30, 0x6a, 0xf0, 0x19, 0x89, 0xe9, 0xc1, 0x1c, 0xaf, 0x87, 0xec, 0xc8, 0x20,
	0xb0, 0x1a, 0x90, 0xe9, 0x49, 0xf9, 0x29, 0x95, 0x4e, 0x95, 0x25, 0xa9, 0xc5, 0x12, 0xac, 0x0a,
	0x8c, 0x1a, 0x3c, 0x41, 0x08, 0x81, 0x24, 0x36, 0xb0, 0x56, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x57, 0x43, 0x25, 0xd1, 0x3c, 0x01, 0x00, 0x00,
}
