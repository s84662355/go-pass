// Code generated by protoc-gen-go. DO NOT EDIT.
// source: convention/protobuf/TcpExtraData结构体.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolEvent int32

const (
	ProtocolEvent_Sescsdcrver ProtocolEvent = 0
)

var ProtocolEvent_name = map[int32]string{
	0: "Sescsdcrver",
}

var ProtocolEvent_value = map[string]int32{
	"Sescsdcrver": 0,
}

func (x ProtocolEvent) String() string {
	return proto.EnumName(ProtocolEvent_name, int32(x))
}

func (ProtocolEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_edeb0c7c104dcb83, []int{0}
}

type TcpExtraData struct {
	MachineCode          string        `protobuf:"bytes,1,opt,name=machineCode,proto3" json:"machineCode,omitempty"`
	SessionId            string        `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Type                 ProtocolEvent `protobuf:"varint,3,opt,name=type,proto3,enum=protocol.ProtocolEvent" json:"type,omitempty"`
	DeviceId             string        `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	UserId               string        `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TcpExtraData) Reset()         { *m = TcpExtraData{} }
func (m *TcpExtraData) String() string { return proto.CompactTextString(m) }
func (*TcpExtraData) ProtoMessage()    {}
func (*TcpExtraData) Descriptor() ([]byte, []int) {
	return fileDescriptor_edeb0c7c104dcb83, []int{0}
}

func (m *TcpExtraData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpExtraData.Unmarshal(m, b)
}
func (m *TcpExtraData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpExtraData.Marshal(b, m, deterministic)
}
func (m *TcpExtraData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpExtraData.Merge(m, src)
}
func (m *TcpExtraData) XXX_Size() int {
	return xxx_messageInfo_TcpExtraData.Size(m)
}
func (m *TcpExtraData) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpExtraData.DiscardUnknown(m)
}

var xxx_messageInfo_TcpExtraData proto.InternalMessageInfo

func (m *TcpExtraData) GetMachineCode() string {
	if m != nil {
		return m.MachineCode
	}
	return ""
}

func (m *TcpExtraData) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *TcpExtraData) GetType() ProtocolEvent {
	if m != nil {
		return m.Type
	}
	return ProtocolEvent_Sescsdcrver
}

func (m *TcpExtraData) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *TcpExtraData) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterEnum("protocol.ProtocolEvent", ProtocolEvent_name, ProtocolEvent_value)
	proto.RegisterType((*TcpExtraData)(nil), "protocol.TcpExtraData")
}

func init() {
	proto.RegisterFile("convention/protobuf/TcpExtraData结构体.proto", fileDescriptor_edeb0c7c104dcb83)
}

var fileDescriptor_edeb0c7c104dcb83 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4f, 0xce, 0xcf, 0x2b,
	0x4b, 0xcd, 0x2b, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3,
	0x0f, 0x49, 0x2e, 0x70, 0xad, 0x28, 0x29, 0x4a, 0x74, 0x49, 0x2c, 0x49, 0x7c, 0xbe, 0x7b, 0xf2,
	0xb3, 0x79, 0x2d, 0x4f, 0xf6, 0x4e, 0xd6, 0x03, 0x4b, 0x0b, 0x71, 0x80, 0xa9, 0xe4, 0xfc, 0x1c,
	0xa5, 0xf5, 0x8c, 0x5c, 0x3c, 0xc8, 0x2a, 0x85, 0x14, 0xb8, 0xb8, 0x73, 0x13, 0x93, 0x33, 0x32,
	0xf3, 0x52, 0x9d, 0xf3, 0x53, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90, 0x85, 0x84,
	0x64, 0xb8, 0x38, 0x8b, 0x53, 0x8b, 0x8b, 0x33, 0xf3, 0xf3, 0x3c, 0x53, 0x24, 0x98, 0xc0, 0xf2,
	0x08, 0x01, 0x21, 0x6d, 0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x3e,
	0x23, 0x71, 0x3d, 0x98, 0x4d, 0x7a, 0x01, 0x50, 0x86, 0x2b, 0xc8, 0xa5, 0x41, 0x60, 0x45, 0x42,
	0x52, 0x5c, 0x1c, 0x29, 0xa9, 0x65, 0x99, 0xc9, 0xa9, 0x9e, 0x29, 0x12, 0x2c, 0x60, 0x93, 0xe0,
	0x7c, 0x21, 0x31, 0x2e, 0xb6, 0xd2, 0xe2, 0xd4, 0x22, 0xcf, 0x14, 0x09, 0x56, 0xb0, 0x0c, 0x94,
	0xa7, 0xa5, 0xc0, 0xc5, 0x8b, 0x62, 0x94, 0x10, 0x3f, 0x17, 0x77, 0x70, 0x6a, 0x71, 0x72, 0x71,
	0x4a, 0x72, 0x51, 0x59, 0x6a, 0x91, 0x00, 0x43, 0x12, 0x1b, 0xd8, 0x4e, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x89, 0xb9, 0xc2, 0xef, 0x17, 0x01, 0x00, 0x00,
}
